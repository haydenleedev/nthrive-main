{"code":"var Client=function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&\"object\"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:t}),2&n&&\"string\"!=typeof t)for(var r in t)e.d(o,r,function(n){return t[n]}.bind(null,r));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p=\"\",e(e.s=5)}([function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){},function(t,n,e){\"use strict\";function o(t){return/(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/.test(t)}function r(t){t.preventDefault();const n=document.getElementById(\"text\").value;Client.urlValidation(n)?(i(\"http://localhost:8081/inputText\",{text:n}).then((function(t){console.log(\"res: \"+t),l(\"http://localhost:8081/allData\")})).then(()=>c()),console.log(\"::: Form Submitted :::\")):console.log(\"Wrong Format!\")}e.r(n),e.d(n,\"urlValidation\",(function(){return o})),e.d(n,\"handleSubmit\",(function(){return r}));const l=async t=>{const n=await fetch(t);try{const e=await n.json(),o=JSON.stringify(e);return console.log(\"newData: \"+o.polarity),console.log(\"newData0: \"+e[0]),console.log(\"url: \"+t),e}catch(t){console.log(\"error\",t)}},i=async(t=\"\",n={})=>{console.log(\"data1: \"+n);const e=await fetch(t,{method:\"POST\",credentials:\"same-origin\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(n)});try{return await e.json()}catch(t){console.log(\"error\",t)}},c=async()=>{const t=await fetch(\"http://localhost:8081/allData\");try{const n=await t.json();console.log(\"newData Length: \"+n);const e=JSON.stringify(n);console.log(\"newData JSON: \"+e),console.log(\"newData .polarity: \"+e.polarity);document.createElement(\"div\");const o=document.getElementById(\"results\");let r=n.length-1;console.log(r),console.log(\"fianl data: \"+n),o.innerHTML=`<div>${n[r].polarity}</div><div>${n[r].subjectivity}</div><div>${n[r].text}</div><div>${n[r].polarity_confidence}</div><div>${n[r].subjectivity_confidence}</div>`}catch(t){console.log(\"error\",t)}};e(0),e(1),e(2),e(3),e(4);console.log(\"CHANGE!!\")}]);","extractedComments":[]}